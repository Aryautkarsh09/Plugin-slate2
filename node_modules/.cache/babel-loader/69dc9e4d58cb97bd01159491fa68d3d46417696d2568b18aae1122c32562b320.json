{"ast":null,"code":"var _jsxFileName = \"/Users/utkarsharya/Desktop/Editor/my-app/src/Edtor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport { createEditor, Transforms, Editor, Range, Node } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyEditor() {\n  _s();\n  const [initialValue, setInitialvalue] = useState([{\n    type: \"paragraph\",\n    children: [{\n      text: \"A line of text in a paragraph.\"\n    }]\n  }]);\n  const [codebutton, setcodebutton] = useState(false);\n  const [editor] = useState(() => withReact(createEditor()));\n  function codeb() {\n    if (codebutton == false) {\n      setcodebutton(true);\n      Transforms.insertNodes(editor, {\n        type: \"codei\",\n        children: [{\n          text: \"\"\n        }]\n      });\n    } else {\n      setcodebutton(false);\n      Transforms.insertNodes(editor, {\n        type: \"paragraph\",\n        children: [{\n          text: \"\"\n        }]\n      });\n    }\n  }\n  const renderElement = useCallback(_ref => {\n    let {\n      attributes,\n      children,\n      element\n    } = _ref;\n    switch (element.type) {\n      case \"codei\":\n        return /*#__PURE__*/_jsxDEV(\"pre\", {\n          ...attributes,\n          style: {\n            fontFamily: \"Sans-serif\",\n            color: \"red\",\n            backgroundColor: \"black\",\n            margin: \"0px\"\n          },\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this);\n      case 'table':\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          ...attributes,\n          style: {\n            width: \"100%\",\n            border: \"1px solid\"\n          },\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this);\n      case 'table-rows':\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...attributes,\n          style: {\n            border: \"1px solid\"\n          },\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this);\n      case 'table-col':\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          ...attributes,\n          style: {\n            border: \"1px solid\"\n          },\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      case 'Body':\n        return /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this);\n    }\n  }, []);\n  const ele = [{\n    data: {\n      row: 2,\n      col: 2\n    },\n    type: 'table',\n    children: [{\n      type: 'Body',\n      children: [{\n        type: 'table-rows',\n        children: [{\n          type: 'table-col',\n          children: [{\n            type: 'paragraph',\n            children: [{\n              text: '2'\n            }]\n          }]\n        }, {\n          type: 'table-col',\n          children: [{\n            type: 'paragraph',\n            children: [{\n              text: '1'\n            }]\n          }]\n        }]\n      }, {\n        type: 'table-rows',\n        children: [{\n          type: 'table-col',\n          children: [{\n            type: 'paragraph',\n            children: [{\n              text: '3'\n            }]\n          }]\n        }, {\n          type: 'table-col',\n          children: [{\n            type: 'paragraph',\n            children: [{\n              text: '4'\n            }]\n          }]\n        }]\n      }]\n    }]\n  }];\n  function Table() {\n    Transforms.insertNodes(editor, ele);\n  }\n  function InsertRow() {\n    const path = editor.selection.anchor.path;\n    let a = path.length;\n    let b = [];\n    for (let i = 0; i < a - 3; i++) {\n      b.push(path[i]);\n    }\n    const [table1, pathtable] = Editor.above(editor, {\n      at: path,\n      match: node => {\n        Node.type(node) == 'table';\n      },\n      mode: 'lowest'\n    });\n    console.log(pathtable);\n    let c = [];\n    for (let i = 0; i < a - 5; i++) {\n      c.push(path[i]);\n    }\n    const [s, e] = Editor.edges(editor, c);\n    let ncol = e.path[e.path.length - 3] + 1;\n    const row1 = {\n      type: 'table-rows',\n      children: []\n    };\n    for (let i = 0; i < ncol; i++) {\n      row1.children.push({\n        type: 'table-col',\n        children: [{\n          type: 'paragraph',\n          children: [{\n            text: '3'\n          }]\n        }]\n      });\n    }\n    b[a - 4] += 1;\n    Transforms.insertNodes(editor, row1, {\n      at: b\n    });\n  }\n  function loc() {\n    console.log(Editor.edges(editor, [1]));\n  }\n  function insertCol() {\n    const path = editor.selection.anchor.path;\n    let a = path.length;\n    let c = [];\n    for (let i = 0; i < a - 5; i++) {\n      c.push(path[i]);\n    }\n    const [s, e] = Editor.edges(editor, c);\n    let rowpl = [];\n    for (let i = 0; i < a - 4; i++) {\n      rowpl.push(e.path[i]);\n    }\n    const [node, path1] = Editor.node(editor, {\n      at: rowpl\n    });\n    console.log(node);\n    for (const [noder, path2] of Node.children(node, rowpl)) {\n      let ncpath = [];\n      for (let i = 0; i < path2.length; i++) {\n        ncpath.push(path2[i]);\n      }\n      ncpath.push(noder.children.length);\n      Transforms.insertNodes(editor, {\n        type: 'table-col',\n        children: [{\n          type: 'paragraph',\n          children: [{\n            text: '3'\n          }]\n        }]\n      }, {\n        at: ncpath\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Slate, {\n    editor: editor,\n    initialValue: initialValue,\n    onChange: v => setInitialvalue(v),\n    children: [/*#__PURE__*/_jsxDEV(Editable, {\n      renderElement: renderElement,\n      onKeyDown: event => {\n        if (event.code == \"ArrowDown\") {\n          const range = editor.selection;\n          const b = Editor.end(editor, []);\n          let a1 = range.anchor.path.toString();\n          let a2 = b.path.toString();\n          let ins = [];\n          ins.push(b.path[0]);\n          console.log(ins);\n          console.log(editor);\n          if (a1 === a2) {\n            Editor.insertNode(editor, {\n              type: \"paragraph\",\n              children: [{\n                text: \"\"\n              }]\n            }, ins);\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: codeb,\n      children: \"Code-block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Table,\n      children: \"Add-Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: InsertRow,\n      children: \"Add-Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loc,\n      children: \"SEELOC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: insertCol,\n      children: \"Add-Col\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(MyEditor, \"x/m0Y3RT/LEWC0N116LWBOu4res=\");\n_c = MyEditor;\nvar _c;\n$RefreshReg$(_c, \"MyEditor\");","map":{"version":3,"names":["React","useState","useCallback","createEditor","Transforms","Editor","Range","Node","Slate","Editable","withReact","jsxDEV","_jsxDEV","MyEditor","_s","initialValue","setInitialvalue","type","children","text","codebutton","setcodebutton","editor","codeb","insertNodes","renderElement","_ref","attributes","element","style","fontFamily","color","backgroundColor","margin","fileName","_jsxFileName","lineNumber","columnNumber","width","border","ele","data","row","col","Table","InsertRow","path","selection","anchor","a","length","b","i","push","table1","pathtable","above","at","match","node","mode","console","log","c","s","e","edges","ncol","row1","loc","insertCol","rowpl","path1","noder","path2","ncpath","onChange","v","onKeyDown","event","code","range","end","a1","toString","a2","ins","insertNode","onClick","_c","$RefreshReg$"],"sources":["/Users/utkarsharya/Desktop/Editor/my-app/src/Edtor.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\n\nimport { createEditor, Transforms, Editor, Range,Node } from \"slate\";\n\nimport { Slate, Editable, withReact } from \"slate-react\";\n\nexport default function MyEditor() {\n  const [initialValue, setInitialvalue] = useState([\n    {\n      type: \"paragraph\",\n      children: [{ text: \"A line of text in a paragraph.\" }],\n    },\n  ]);\n  const [codebutton, setcodebutton] = useState(false);\n  const [editor] = useState(() => withReact(createEditor()));\n\n  function codeb() {\n    if (codebutton == false) {\n      setcodebutton(true);\n      Transforms.insertNodes(editor, {\n        type: \"codei\",\n        children: [{ text: \"\" }],\n      });\n    } else {\n      setcodebutton(false);\n      Transforms.insertNodes(editor, {\n        type: \"paragraph\",\n        children: [{ text: \"\" }],\n      });\n    }\n  }\n\n  const renderElement = useCallback(({ attributes, children, element }) => {\n    switch (element.type) {\n      case \"codei\":\n        return (\n          <pre\n            {...attributes}\n            style={{\n              fontFamily: \"Sans-serif\",\n              color: \"red\",\n              backgroundColor: \"black\",\n              margin: \"0px\",\n            }}\n          >\n            {children}\n          </pre>\n        );\n        case  'table':\n            return(\n              <table {...attributes} style = {{width:\"100%\" ,border:\"1px solid\"}}>{children}</table>\n\n\n            );\n        case 'table-rows':\n            return(\n              <tr {...attributes} style = {{border:\"1px solid\"}}>{children}</tr>\n\n            );\n         case 'table-col':\n          return(\n            <td {...attributes} style = {{border:\"1px solid\"}}>{children}</td>\n          )   \n          case 'Body':\n            return(\n              <tbody {...attributes}>{children}</tbody>\n            )\n      default:\n        return <p {...attributes}>{children}</p>;\n    }\n  }, []);\n  const ele = [\n{\ndata :{\nrow:2,\ncol : 2\n},\ntype : 'table',\nchildren:[{type : 'Body',children : [{type : 'table-rows',\nchildren : [{type : 'table-col',children :[{type : 'paragraph',children:[{text:'2'}]}]},{type : 'table-col',children :[{type : 'paragraph',children:[{text:'1'}]}]}]},\n{type : 'table-rows',\nchildren : [{type : 'table-col',children :[{type : 'paragraph',children:[{text:'3'}]}]},{type : 'table-col',children :[{type : 'paragraph',children:[{text:'4'}]}]}]}]\n}]\n\n\n}\n\n\n\n  ]\nfunction Table(){\n\nTransforms.insertNodes(editor,ele);\n\n}\nfunction InsertRow(){\nconst path = editor.selection.anchor.path;\nlet a = path.length;\nlet b = [];\nfor(let i = 0;i<a-3;i++){\nb.push(path[i]);\n}\nconst [table1,pathtable] = Editor.above(editor,{at : path,match : (node)=>{\n Node.type(node) == 'table'\n},mode : 'lowest'});\nconsole.log(pathtable);\nlet c = [];\n\nfor(let i = 0;i<a-5;i++){\nc.push(path[i]);\n\n}\nconst [s,e] = Editor.edges(editor, c);\n\nlet ncol = e.path[e.path.length-3]+1;\n\nconst row1 = {type : 'table-rows',children : []};\nfor(let i = 0;i<ncol;i++){\nrow1.children.push({type : 'table-col',children :[{type : 'paragraph',children:[{text:'3'}]}]})\n}\n\nb[a-4]+=1;\nTransforms.insertNodes(editor,row1,{at : b});\n\n}\nfunction loc(){\nconsole.log(Editor.edges(editor,[1]));\n\n}\nfunction insertCol(){\n  const path = editor.selection.anchor.path;\n  let a = path.length;\n  \n  let c = [];\n  \n  for(let i = 0;i<a-5;i++){\n  c.push(path[i]);\n  \n  }\n  \n  const [s,e] = Editor.edges(editor, c);\nlet rowpl = [];\nfor(let i = 0;i<a-4;i++){\n  rowpl.push(e.path[i]);\n}\nconst[node,path1] = Editor.node(editor,{at : rowpl});\nconsole.log(node);\nfor(const[noder,path2] of Node.children(node,rowpl)){\nlet ncpath = [];\nfor(let i = 0;i<path2.length;i++){\n  ncpath.push(path2[i]);\n}\nncpath.push(noder.children.length);\nTransforms.insertNodes(editor,{type : 'table-col',children :[{type : 'paragraph',children:[{text:'3'}]}]},{at : ncpath});\n\n}\n\n}\n  return (\n    <Slate\n      editor={editor}\n      initialValue={initialValue}\n      onChange={(v) => setInitialvalue(v)}\n    >\n      <Editable\n        renderElement={renderElement}\n        onKeyDown={(event) => {\n          if (event.code == \"ArrowDown\") {\n            const range = editor.selection;\n\n            const b = Editor.end(editor, []);\n            let a1 = range.anchor.path.toString();\n            let a2 = b.path.toString();\nlet ins  = [];\nins.push(b.path[0]);\nconsole.log(ins);\nconsole.log(editor);\n            if (a1 === a2) {\n              Editor.insertNode(editor, {\n                type: \"paragraph\",\n                children: [{ text: \"\" }],\n              }, ins);\n            }\n          }\n        }}\n      />\n      \n      <button onClick={codeb}>Code-block</button>\n      <button onClick={Table}>Add-Table</button>\n      <button onClick = {InsertRow}>Add-Row</button>\n      <button onClick = {loc}>SEELOC</button>\n      <button onClick = {insertCol}>Add-Col</button>\n    </Slate>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}