{"ast":null,"code":"var _jsxFileName = \"/Users/utkarsharya/Desktop/Editor/my-app/src/Edtor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { createEditor, Transforms, Editor, Range } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyEditor() {\n  _s();\n  const [initialValue, setInitialvalue] = useState([{\n    type: 'paragraph',\n    children: [{\n      text: 'A line of text in a paragraph.'\n    }]\n  }]);\n  const [codebutton, setcodebutton] = useState(false);\n  const [editor] = useState(() => withReact(createEditor()));\n  function add() {\n    Editor.deleteFragment(editor, \"abc\");\n  }\n  function loc() {\n    const [a, b] = Editor.edges(editor, []);\n    console.log(a);\n    console.log(b);\n  }\n  function leaf() {\n    const a = Editor.string(editor, []);\n    console.log(a);\n  }\n  function insert() {\n    Transforms.insertText(editor, \"abc\");\n  }\n  function codeb() {\n    if (codebutton == false) {\n      setcodebutton(true);\n      Transforms.insertNodes(editor, {\n        type: 'codei',\n        children: [{\n          text: ''\n        }]\n      });\n    } else {\n      setcodebutton(false);\n      Transforms.insertNodes(editor, {\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      });\n    }\n  }\n  window.addEventListener('keyup', event => {\n    if (event.code == \"ArrowDown\") {\n      const range = editor.selection;\n      const b = Editor.end(editor, []);\n      if (range.anchor === b) {\n        Transforms.insertNodes(editor, {\n          type: 'paragraph',\n          children: [{\n            text: ''\n          }]\n        });\n      }\n    }\n  });\n  const renderElement = useCallback(_ref => {\n    let {\n      attributes,\n      children,\n      element\n    } = _ref;\n    switch (element.type) {\n      case 'codei':\n        return /*#__PURE__*/_jsxDEV(\"pre\", {\n          ...attributes,\n          style: {\n            fontFamily: \"Sans-serif\",\n            color: \"red\",\n            backgroundColor: \"black\",\n            margin: \"0px\"\n          },\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Slate, {\n    editor: editor,\n    initialValue: initialValue,\n    onChange: v => setInitialvalue(v),\n    children: [/*#__PURE__*/_jsxDEV(Editable, {\n      renderElement: renderElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loc,\n      children: \"see point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: leaf,\n      children: \"see leaf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: insert,\n      children: \"insert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: codeb,\n      children: \"Code-block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n}\n_s(MyEditor, \"VtN/IMqCsT2FzWZJANBzaUHxstM=\");\n_c = MyEditor;\nvar _c;\n$RefreshReg$(_c, \"MyEditor\");","map":{"version":3,"names":["React","useState","useCallback","createEditor","Transforms","Editor","Range","Slate","Editable","withReact","jsxDEV","_jsxDEV","MyEditor","_s","initialValue","setInitialvalue","type","children","text","codebutton","setcodebutton","editor","add","deleteFragment","loc","a","b","edges","console","log","leaf","string","insert","insertText","codeb","insertNodes","window","addEventListener","event","code","range","selection","end","anchor","renderElement","_ref","attributes","element","style","fontFamily","color","backgroundColor","margin","fileName","_jsxFileName","lineNumber","columnNumber","onChange","v","onClick","_c","$RefreshReg$"],"sources":["/Users/utkarsharya/Desktop/Editor/my-app/src/Edtor.js"],"sourcesContent":["import React, { useState,useCallback } from 'react'\n\nimport { createEditor,Transforms,Editor,Range  } from 'slate'\n\nimport { Slate, Editable, withReact} from 'slate-react'\n\n\n\nexport default function MyEditor(){\n  const [initialValue,setInitialvalue] = useState([\n    {\n      type: 'paragraph',\n      children: [{ text: 'A line of text in a paragraph.' }],\n    }\n  ]);\n  const[codebutton,setcodebutton] = useState(false);\n    const [editor] = useState(() => withReact(createEditor()))\n    function add(){\n      Editor.deleteFragment(editor,\"abc\");\n      }\n      function loc(){\n\n       const [a,b] = Editor.edges(editor,[]);\n       console.log(a);\n       console.log(b);\n      }\n      function leaf(){\nconst a = Editor.string(editor,[]);\nconsole.log(a);\n\n      }\n      function insert(){\n        Transforms.insertText(editor,\"abc\");\n      }\n      function codeb(){\n        if(codebutton==false){\n          setcodebutton(true);\nTransforms.insertNodes(editor,{\n  type : 'codei',\nchildren : [{text : ''}]\n});\n        }\n        else{\nsetcodebutton(false);\nTransforms.insertNodes(editor,{\n  type : 'paragraph',\n  children : [{text : ''}]\n})\n        }\n\n      }\n   window.addEventListener('keyup',(event)=>{\n  if(event.code == \"ArrowDown\"){  \n    \n\nconst range = editor.selection;\n\n\nconst b = Editor.end(editor,[]);\nif(range.anchor===b){\n  Transforms.insertNodes(editor,{\n    type : 'paragraph',\n    children : [{text : ''}]\n  })\n}\n\n\n  }\n   })   \n     const renderElement =  useCallback(({attributes,children,element})=>{\nswitch(element.type){\ncase 'codei' :\nreturn (<pre {...attributes} style = {{fontFamily:\"Sans-serif\",color : \"red\",backgroundColor:\"black\",margin:\"0px\"}}>{children}</pre>)\n\ndefault:\n  return (\n    <p  {...attributes} >\n      {children}\n    </p>\n  )\n\n\n}\n\n     },[])\n    return (\n      <Slate editor={editor} initialValue={initialValue} onChange = {(v)=>setInitialvalue(v)}>\n        <Editable renderElement={renderElement}/>\n        <button onClick = {add}>Add Node</button>\n        <button onClick = {loc}>see point</button>\n        <button onClick = {leaf}>see leaf</button>\n        <button onClick = {insert}>insert</button>\n        <button onClick = {codeb}>Code-block</button>\n      </Slate>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,WAAW,QAAQ,OAAO;AAEnD,SAASC,YAAY,EAACC,UAAU,EAACC,MAAM,EAACC,KAAK,QAAS,OAAO;AAE7D,SAASC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIvD,eAAe,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAAGd,QAAQ,CAAC,CAC9C;IACEe,IAAI,EAAE,WAAW;IACjBC,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAiC,CAAC;EACvD,CAAC,CACF,CAAC;EACF,MAAK,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoB,MAAM,CAAC,GAAGpB,QAAQ,CAAC,MAAMQ,SAAS,CAACN,YAAY,CAAC,CAAC,CAAC,CAAC;EAC1D,SAASmB,GAAGA,CAAA,EAAE;IACZjB,MAAM,CAACkB,cAAc,CAACF,MAAM,EAAC,KAAK,CAAC;EACnC;EACA,SAASG,GAAGA,CAAA,EAAE;IAEb,MAAM,CAACC,CAAC,EAACC,CAAC,CAAC,GAAGrB,MAAM,CAACsB,KAAK,CAACN,MAAM,EAAC,EAAE,CAAC;IACrCO,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;IACdG,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;EACf;EACA,SAASI,IAAIA,CAAA,EAAE;IACrB,MAAML,CAAC,GAAGpB,MAAM,CAAC0B,MAAM,CAACV,MAAM,EAAC,EAAE,CAAC;IAClCO,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;EAER;EACA,SAASO,MAAMA,CAAA,EAAE;IACf5B,UAAU,CAAC6B,UAAU,CAACZ,MAAM,EAAC,KAAK,CAAC;EACrC;EACA,SAASa,KAAKA,CAAA,EAAE;IACd,IAAGf,UAAU,IAAE,KAAK,EAAC;MACnBC,aAAa,CAAC,IAAI,CAAC;MAC7BhB,UAAU,CAAC+B,WAAW,CAACd,MAAM,EAAC;QAC5BL,IAAI,EAAG,OAAO;QAChBC,QAAQ,EAAG,CAAC;UAACC,IAAI,EAAG;QAAE,CAAC;MACvB,CAAC,CAAC;IACM,CAAC,MACG;MACZE,aAAa,CAAC,KAAK,CAAC;MACpBhB,UAAU,CAAC+B,WAAW,CAACd,MAAM,EAAC;QAC5BL,IAAI,EAAG,WAAW;QAClBC,QAAQ,EAAG,CAAC;UAACC,IAAI,EAAG;QAAE,CAAC;MACzB,CAAC,CAAC;IACM;EAEF;EACHkB,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEC,KAAK,IAAG;IAC1C,IAAGA,KAAK,CAACC,IAAI,IAAI,WAAW,EAAC;MAG/B,MAAMC,KAAK,GAAGnB,MAAM,CAACoB,SAAS;MAG9B,MAAMf,CAAC,GAAGrB,MAAM,CAACqC,GAAG,CAACrB,MAAM,EAAC,EAAE,CAAC;MAC/B,IAAGmB,KAAK,CAACG,MAAM,KAAGjB,CAAC,EAAC;QAClBtB,UAAU,CAAC+B,WAAW,CAACd,MAAM,EAAC;UAC5BL,IAAI,EAAG,WAAW;UAClBC,QAAQ,EAAG,CAAC;YAACC,IAAI,EAAG;UAAE,CAAC;QACzB,CAAC,CAAC;MACJ;IAGE;EACC,CAAC,CAAC;EACA,MAAM0B,aAAa,GAAI1C,WAAW,CAAC2C,IAAA,IAAiC;IAAA,IAAhC;MAACC,UAAU;MAAC7B,QAAQ;MAAC8B;IAAO,CAAC,GAAAF,IAAA;IACtE,QAAOE,OAAO,CAAC/B,IAAI;MACnB,KAAK,OAAO;QACZ,oBAAQL,OAAA;UAAA,GAASmC,UAAU;UAAEE,KAAK,EAAI;YAACC,UAAU,EAAC,YAAY;YAACC,KAAK,EAAG,KAAK;YAACC,eAAe,EAAC,OAAO;YAACC,MAAM,EAAC;UAAK,CAAE;UAAAnC,QAAA,EAAEA;QAAQ;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAEpI;QACE,oBACE7C,OAAA;UAAA,GAAQmC,UAAU;UAAA7B,QAAA,EACfA;QAAQ;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;IAIR;EAEK,CAAC,EAAC,EAAE,CAAC;EACN,oBACE7C,OAAA,CAACJ,KAAK;IAACc,MAAM,EAAEA,MAAO;IAACP,YAAY,EAAEA,YAAa;IAAC2C,QAAQ,EAAKC,CAAC,IAAG3C,eAAe,CAAC2C,CAAC,CAAE;IAAAzC,QAAA,gBACrFN,OAAA,CAACH,QAAQ;MAACoC,aAAa,EAAEA;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzC7C,OAAA;MAAQgD,OAAO,EAAIrC,GAAI;MAAAL,QAAA,EAAC;IAAQ;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzC7C,OAAA;MAAQgD,OAAO,EAAInC,GAAI;MAAAP,QAAA,EAAC;IAAS;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1C7C,OAAA;MAAQgD,OAAO,EAAI7B,IAAK;MAAAb,QAAA,EAAC;IAAQ;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1C7C,OAAA;MAAQgD,OAAO,EAAI3B,MAAO;MAAAf,QAAA,EAAC;IAAM;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1C7C,OAAA;MAAQgD,OAAO,EAAIzB,KAAM;MAAAjB,QAAA,EAAC;IAAU;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd;AAAC3C,EAAA,CAvFuBD,QAAQ;AAAAgD,EAAA,GAARhD,QAAQ;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}